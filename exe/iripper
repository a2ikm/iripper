#!/usr/bin/env ruby

require "pp"
require "ripper"
require "iripper"

DELIM_RE = /[[:space:]]+/
BLANK_RE = /\A[[:space:]]*\z/

def show_version
  puts IRipper::VERSION
end

def show_help
  puts "TODO: Show help"
end

RIPPER_COMMANDS = %w(lex parse sexp tokenize).freeze

def ripper_command?(cmd)
  RIPPER_COMMANDS.include?(cmd)
end

def warn_unknown_ripper_command(cmd)
  if ripper_command?(cmd)
    false
  else
    warn <<-TEXT
Unknown ripper command `#{cmd}`. Available ripper commands are #{RIPPER_COMMANDS.join(", ")}.
    TEXT

    true
  end
end

default = ARGV[0] ? ARGV[0].strip : nil

if default
  case default
  when "help"
    show_help
    exit
  when "version"
    show_version
    exit
  else
    if warn_unknown_ripper_command(default)
      default = nil
    end
  end
end

loop do
  if default
    print "iripper(#{default})> "
  else
    print "iripper> "
  end

  begin
    line = $stdin.gets.chomp
  rescue NoMethodError, Interrupt
    exit
  end

  cmd, src = line.split(DELIM_RE, 2)
  case cmd
  when "default"
    if src.nil? || BLANK_RE.match?(src)
      default = nil
    else
      src.strip!
      if warn_unknown_ripper_command(src)
        next
      end
      default = src
    end
    next
  when "help"
    show_help
    next
  when "version"
    show_version
    next
  when "exit", "quit"
    exit
  when nil, BLANK_RE
    next
  end

  if default
    cmd, src = default, line
  end

  if ripper_command?(cmd)
    pp Ripper.send(cmd, src)
    next
  end

  warn "Unknown command: #{cmd}."
end
